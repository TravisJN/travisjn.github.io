{"version":3,"sources":["components/Navbar.js","components/Bomblobber.js","components/Works.js","components/About.js","components/Apps.js","components/Sites.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","pathname","useLocation","useState","currentView","setView","className","to","onClick","Bomblobber","duration","title","style","border","height","width","id","src","Works","currentWork","setWork","About","Apps","currentApp","setApp","Sites","href","Resume","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0410a98b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Navbar() {\n  const { pathname } = useLocation();\n  const [currentView, setView] = useState(pathname);\n\n  return (\n    <div className=\"navbar\">\n      <Link\n        to=\"/works\"\n        className={`navbar-text ${currentView === '/works' ? 'underline' : ''}`}\n        onClick={() => setView('/works')}\n      >\n        Works\n      </Link>\n      <Link\n        to=\"/apps\"\n        className={`navbar-text ${currentView === '/apps' ? 'underline' : ''}`}\n        onClick={() => setView('/apps')}\n      >\n        Apps\n      </Link>\n      <Link\n        to=\"/sites\"\n        className={`navbar-text ${currentView === '/sites' ? 'underline' : ''}`}\n        onClick={() => setView('/sites')}\n      >\n        Sites\n      </Link>\n      <Link\n        to=\"/resume\"\n        className={`navbar-text ${currentView === '/resume' ? 'underline' : ''}`}\n        onClick={() => setView('/resume')}\n      >\n        Resume\n      </Link>\n      <Link\n        to=\"/about\"\n        className={`navbar-text ${currentView === '/about' ? 'underline' : ''}`}\n        onClick={() => setView('/about')}\n      >\n        About\n      </Link>\n    </div>\n  );\n}\n\nexport default Navbar;","import React from 'react';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction Bomblobber() {\n  return (\n    <Fade duration={500}>\n      <iframe\n        title=\"bomblobber\"\n        style={{border: 'none'}}\n        height=\"600px\"\n        width=\"600px\"\n        id=\"bomblobber-game\"\n        src=\"bomblobber/bomblobber.html\"\n      />\n    </Fade>\n  );\n}\n\nexport default Bomblobber;","import React, { useState } from 'react';\nimport Bomblobber from './Bomblobber';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction Works() {\n  const [currentWork, setWork] = useState(null);\n\n  return (\n    <Fade>\n      <div className=\"main-container\">\n        <div className=\"links-list\">\n          <span className=\"link\" onClick={() => setWork('bomblobber')}>Bomb Lobber</span>\n        </div>\n        {currentWork === 'bomblobber' &&\n          <Bomblobber />\n        }\n      </div>\n    </Fade>\n  );\n};\n\nexport default Works;","import React from 'react';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction About() {\n  return (\n    <Fade>\n      <div className=\"main-container\">\n        <span>I'm a creator who likes to code. I have extensive experience using JavaScript for the web and mobile.</span>\n      </div>\n    </Fade>\n  );\n}\n\nexport default About;","import React, { useState } from 'react';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction Apps() {\n  const [currentApp, setApp] = useState('Logger');\n\n  return (\n    <Fade>\n      <div className=\"main-container\">\n        <div className=\"links-list\">\n          <span className=\"link\" onClick={() => setApp('Logger')}>Logger</span>\n        </div>\n        {currentApp === 'Logger' &&\n          <div className=\"logger-container\">\n            <span>\n              Logger is an app for iOS and Android that tracks IBS symptoms with a simple intuitive UI.\n            </span>\n            <span>\n              Meant to be used while you go. Simply record how you're feeling and what you've eaten. Logger will look for patterns and inform you of foods you should avoid.\n            </span>\n          </div>\n        }\n      </div>\n    </Fade>\n  );\n}\n\nexport default Apps;\n","import React from 'react';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction Sites() {\n  return (\n    <Fade>\n      <div className=\"main-container\">\n        <div className=\"links-list\">\n          <a href=\"http://brewingandbeer.com\" className=\"link\">Brewing and Beer</a>\n          <a href=\"https://practicalagile842645152.wordpress.com\" className=\"link\">Sensible Agile</a>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nexport default Sites;","import React from 'react';\nimport { Fade } from 'react-awesome-reveal';\n\nfunction Resume() {\n  return (\n    <Fade>\n      <div className=\"main-container\">\n        <div className=\"links-list\">\n          <a href=\"https://www.linkedin.com/in/travisjneufeld/\">LinkedIn Profile</a>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n\nexport default Resume;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Works from './components/Works';\nimport About from './components/About';\nimport Apps from './components/Apps';\nimport Sites from './components/Sites';\nimport Resume from './components/Resume';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <h1 className=\"under-construction\">Under Construction</h1>\n        <div className=\"header-container\">\n          <div className=\"site-title-text\">Travis Neufeld</div>\n          <Navbar />\n        </div>\n\n        <div className=\"main-container\">\n          <Switch>\n            <Route path=\"/works\">\n              <Works />\n            </Route>\n            <Route path=\"/apps\">\n              <Apps />\n            </Route>\n            <Route path=\"/sites\">\n              <Sites />\n            </Route>\n            <Route path=\"/resume\">\n              <Resume />\n            </Route>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}